package greenContextOntology.impl;

import edu.stanford.smi.protege.model.FrameID;
import edu.stanford.smi.protegex.owl.model.*;
import edu.stanford.smi.protegex.owl.model.impl.*;
 
import java.util.*;

import greenContextOntology.CPU;
import greenContextOntology.*;

/**
 * Generated by Protege-OWL  (http://protege.stanford.edu/plugins/owl).
 * Source OWL Class: http://www.owl-ontologies.com/Datacenter.owl#CPU
 *
 * @version generated on Sat Mar 06 16:14:39 EET 2010
 */
public class DefaultCPU extends DefaultComponent
         implements CPU {

    public DefaultCPU(OWLModel owlModel, FrameID id) {
        super(owlModel, id);
    }


    public DefaultCPU() {
    }



    // Property http://www.owl-ontologies.com/Datacenter.owl#associatedCore

    public Collection getAssociatedCore() {
        return getPropertyValuesAs(getAssociatedCoreProperty(), Core.class);
    }


    public RDFProperty getAssociatedCoreProperty() {
        final String uri = "http://www.owl-ontologies.com/Datacenter.owl#associatedCore";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasAssociatedCore() {
        return getPropertyValueCount(getAssociatedCoreProperty()) > 0;
    }


    public Iterator listAssociatedCore() {
        return listPropertyValuesAs(getAssociatedCoreProperty(), Core.class);
    }


    public void addAssociatedCore(Core newAssociatedCore) {
        addPropertyValue(getAssociatedCoreProperty(), newAssociatedCore);
    }


    public void removeAssociatedCore(Core oldAssociatedCore) {
        removePropertyValue(getAssociatedCoreProperty(), oldAssociatedCore);
    }


    public void setAssociatedCore(Collection newAssociatedCore) {
        setPropertyValues(getAssociatedCoreProperty(), newAssociatedCore);
    }



    // Property http://www.owl-ontologies.com/Datacenter.owl#total

    public int getTotal() {
        return getPropertyValueLiteral(getTotalProperty()).getInt();
    }


    public RDFProperty getTotalProperty() {
        final String uri = "http://www.owl-ontologies.com/Datacenter.owl#total";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasTotal() {
        return getPropertyValueCount(getTotalProperty()) > 0;
    }


    public void setTotal(int newTotal) {
        setPropertyValue(getTotalProperty(), new java.lang.Integer(newTotal));
    }



    // Property http://www.owl-ontologies.com/Datacenter.owl#used

    public int getUsed() {
        return getPropertyValueLiteral(getUsedProperty()).getInt();
    }


    public RDFProperty getUsedProperty() {
        final String uri = "http://www.owl-ontologies.com/Datacenter.owl#used";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasUsed() {
        return getPropertyValueCount(getUsedProperty()) > 0;
    }


    public void setUsed(int newUsed) {
        setPropertyValue(getUsedProperty(), new java.lang.Integer(newUsed));
    }
}
