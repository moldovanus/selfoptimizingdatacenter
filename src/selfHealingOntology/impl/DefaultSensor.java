package selfHealingOntology.impl;

import com.hp.hpl.jena.ontology.Individual;
import com.hp.hpl.jena.ontology.OntModel;
import com.hp.hpl.jena.rdf.model.Property;
import com.hp.hpl.jena.rdf.model.RDFNode;
import edu.stanford.smi.protege.model.FrameID;
import edu.stanford.smi.protegex.owl.model.OWLModel;
import edu.stanford.smi.protegex.owl.model.RDFProperty;
import selfHealingOntology.Actuator;
import selfHealingOntology.Sensor;

import java.util.Collection;
import java.util.Iterator;

/**
 * Generated by Protege-OWL  (http://protege.stanford.edu/plugins/owl).
 * Source OWL Class: http://www.owl-ontologies.com/Ontology1230214892.owl#Sensor
 *
 * @version generated on Wed Mar 17 12:47:46 EET 2010
 */
public class DefaultSensor extends DefaultPhysicalResource
         implements Sensor {

    public DefaultSensor(OWLModel owlModel, FrameID id) {
        super(owlModel, id);
    }


    public DefaultSensor() {
    }

    // Property http://www.owl-ontologies.com/Ontology1230214892.owl#acceptableSensorValue

    public boolean getAcceptableSensorValue(OntModel ontModel) {
        Individual ind = ontModel.getIndividual(this.getName());
        Property isOK = ontModel.getProperty(getAcceptableSensorValueProperty().getName());
        RDFNode ok = ind.getPropertyValue(isOK);
        if (ok == null) {
            return false;
        } else {
            return ok.toString().contains("true");
        }
    }


    public RDFProperty getAcceptableSensorValueProperty() {
        final String uri = "http://www.owl-ontologies.com/Ontology1230214892.owl#acceptableSensorValue";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasAcceptableSensorValue() {
        return getPropertyValueCount(getAcceptableSensorValueProperty()) > 0;
    }


    public void setAcceptableSensorValue(boolean newAcceptableSensorValue) {
        setPropertyValue(getAcceptableSensorValueProperty(), new java.lang.Boolean(newAcceptableSensorValue));
    }



    // Property http://www.owl-ontologies.com/Ontology1230214892.owl#associatedActuators

    public Collection getAssociatedActuators() {
        return getPropertyValuesAs(getAssociatedActuatorsProperty(), Actuator.class);
    }


    public RDFProperty getAssociatedActuatorsProperty() {
        final String uri = "http://www.owl-ontologies.com/Ontology1230214892.owl#associatedActuators";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasAssociatedActuators() {
        return getPropertyValueCount(getAssociatedActuatorsProperty()) > 0;
    }


    public Iterator listAssociatedActuators() {
        return listPropertyValuesAs(getAssociatedActuatorsProperty(), Actuator.class);
    }


    public void addAssociatedActuators(Actuator newAssociatedActuators) {
        addPropertyValue(getAssociatedActuatorsProperty(), newAssociatedActuators);
    }


    public void removeAssociatedActuators(Actuator oldAssociatedActuators) {
        removePropertyValue(getAssociatedActuatorsProperty(), oldAssociatedActuators);
    }


    public void setAssociatedActuators(Collection newAssociatedActuators) {
        setPropertyValues(getAssociatedActuatorsProperty(), newAssociatedActuators);
    }



    // Property http://www.owl-ontologies.com/Ontology1230214892.owl#valueOfService

    public int getValueOfService() {
        return getPropertyValueLiteral(getValueOfServiceProperty()).getInt();
    }


    public RDFProperty getValueOfServiceProperty() {
        final String uri = "http://www.owl-ontologies.com/Ontology1230214892.owl#valueOfService";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasValueOfService() {
        return getPropertyValueCount(getValueOfServiceProperty()) > 0;
    }


    public void setValueOfService(int newValueOfService, OntModel model) {
        setPropertyValue(getValueOfServiceProperty(), newValueOfService,model);
    }



    // Property http://www.owl-ontologies.com/Ontology1230214892.owl#webServiceURI

    public String getWebServiceURI() {
        return (String) getPropertyValue(getWebServiceURIProperty());
    }


    public RDFProperty getWebServiceURIProperty() {
        final String uri = "http://www.owl-ontologies.com/Ontology1230214892.owl#webServiceURI";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasWebServiceURI() {
        return getPropertyValueCount(getWebServiceURIProperty()) > 0;
    }


    public void setWebServiceURI(String newWebServiceURI) {
        setPropertyValue(getWebServiceURIProperty(), newWebServiceURI);
    }
}
