package selfHealingOntology.impl;

import edu.stanford.smi.protege.model.FrameID;
import edu.stanford.smi.protegex.owl.model.OWLModel;
import edu.stanford.smi.protegex.owl.model.RDFProperty;
import selfHealingOntology.Action;
import selfHealingOntology.Actuator;

import java.util.Collection;
import java.util.Iterator;

/**
 * Generated by Protege-OWL  (http://protege.stanford.edu/plugins/owl).
 * Source OWL Class: http://www.owl-ontologies.com/Ontology1230214892.owl#Actuator
 *
 * @version generated on Wed Mar 17 12:47:46 EET 2010
 */
public class DefaultActuator extends DefaultPhysicalResource
         implements Actuator {

    public DefaultActuator(OWLModel owlModel, FrameID id) {
        super(owlModel, id);
    }


    public DefaultActuator() {
    }



    // Property http://www.owl-ontologies.com/Ontology1230214892.owl#associatedActions

    public Collection getAssociatedActions() {
        return getPropertyValuesAs(getAssociatedActionsProperty(), Action.class);
    }


    public RDFProperty getAssociatedActionsProperty() {
        final String uri = "http://www.owl-ontologies.com/Ontology1230214892.owl#associatedActions";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasAssociatedActions() {
        return getPropertyValueCount(getAssociatedActionsProperty()) > 0;
    }


    public Iterator listAssociatedActions() {
        return listPropertyValuesAs(getAssociatedActionsProperty(), Action.class);
    }


    public void addAssociatedActions(Action newAssociatedActions) {
        addPropertyValue(getAssociatedActionsProperty(), newAssociatedActions);
    }


    public void removeAssociatedActions(Action oldAssociatedActions) {
        removePropertyValue(getAssociatedActionsProperty(), oldAssociatedActions);
    }


    public void setAssociatedActions(Collection newAssociatedActions) {
        setPropertyValues(getAssociatedActionsProperty(), newAssociatedActions);
    }
}
