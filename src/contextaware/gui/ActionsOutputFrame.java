/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ActionsOutputFrame.java
 *
 * Created on Dec 10, 2009, 9:58:20 AM
 */
package contextaware.gui;

import javax.swing.*;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.TableModel;
import java.util.ArrayList;

/**
 * @author Administrator
 */
public class ActionsOutputFrame extends javax.swing.JFrame {

    private ArrayList<String[]> brokenStatesList = new ArrayList<String[]>(5);
    private ArrayList<String[]> actionsList = new ArrayList<String[]>(5);
    private ArrayList<String> policiesList = new ArrayList<String>(5);
    private String[] brokenStateTableNames = {"Sensor", "Value"};
    private String[] actionsTableNames = {"Action", "Target", "Value"};
    TableModel brokenStateDataModel = new AbstractTableModel() {

        @Override
        public String getColumnName(int column) {
            return brokenStateTableNames[column];
        }

        public int getColumnCount() {
            return 2;
        }

        public int getRowCount() {
            return brokenStatesList.size();
        }

        public Object getValueAt(int row, int col) {
            //TODO : to remove check if getName() does not return full ontology name
            String val = brokenStatesList.get(row)[col];
            if (val.contains("#")) {
                val = val.split("#")[1];
            }
            return val;
        }

        @Override
        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return false;
        }

        @Override
        public Class<?> getColumnClass(int columnIndex) {
            return String.class;
        }
    };
    JTable currentStateTable = new JTable(brokenStateDataModel);
    TableModel actionsDataModel = new AbstractTableModel() {

        @Override
        public String getColumnName(int column) {
            return actionsTableNames[column];
        }

        public int getColumnCount() {
            return 3;
        }

        public int getRowCount() {
            return actionsList.size();
        }

        public Object getValueAt(int row, int col) {
            String val = actionsList.get(row)[col];
            if (val.contains("#")) {
                val = val.split("#")[1];
            }
            return val;
        }

        @Override
        public Class<?> getColumnClass(int columnIndex) {
            return String.class;
        }

        @Override
        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return false;
        }
    };
    JTable actionsTable = new JTable(actionsDataModel);
    TableModel policiesDataModel = new AbstractTableModel() {

        @Override
        public String getColumnName(int column) {
            return "Broken policy";
        }

        public int getColumnCount() {
            return 1;
        }

        public int getRowCount() {
            return policiesList.size();
        }

        public Object getValueAt(int row, int col) {
            String val = policiesList.get(row);
            if (val.contains("#")) {
                val = val.split("#")[1];
            }
            return val;

        }

        @Override
        public Class<?> getColumnClass(int columnIndex) {
            return String.class;
        }

        @Override
        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return false;
        }
    };
    JTable policiesTable = new JTable(policiesDataModel);

    /**
     * Creates new form ActionsOutputFrame
     */
    public ActionsOutputFrame() {
        super("Actions Output Frame");
        initComponents();

    }

    public ActionsOutputFrame(String agentName) {
        super("Actions Output Frame : " + agentName);
        initComponents();
    }

    /**
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {


        currentStatePanel = new javax.swing.JPanel();
        currentStateLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();

        policiesPanel = new javax.swing.JPanel();
        policiesLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();

        actionsPanel = new javax.swing.JPanel();
        actionsLabel = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();


        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        currentStatePanel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        currentStateLabel.setText("Current state");


        jScrollPane1.setViewportView(currentStateTable);

        javax.swing.GroupLayout currentStatePanelLayout = new javax.swing.GroupLayout(currentStatePanel);
        currentStatePanel.setLayout(currentStatePanelLayout);
        currentStatePanelLayout.setHorizontalGroup(
                currentStatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(currentStatePanelLayout.createSequentialGroup().addContainerGap().addGroup(currentStatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE).addComponent(currentStateLabel)).addContainerGap()));
        currentStatePanelLayout.setVerticalGroup(
                currentStatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(currentStatePanelLayout.createSequentialGroup().addContainerGap().addComponent(currentStateLabel).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE).addContainerGap()));

        policiesPanel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        policiesLabel.setText("Current broken policies");

        jScrollPane2.setViewportView(policiesTable);

        javax.swing.GroupLayout policiesPanelLayout = new javax.swing.GroupLayout(policiesPanel);
        policiesPanel.setLayout(policiesPanelLayout);
        policiesPanelLayout.setHorizontalGroup(
                policiesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(policiesPanelLayout.createSequentialGroup().addContainerGap().addGroup(policiesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE).addComponent(policiesLabel)).addContainerGap()));
        policiesPanelLayout.setVerticalGroup(
                policiesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(policiesPanelLayout.createSequentialGroup().addContainerGap().addComponent(policiesLabel).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)));

        actionsPanel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        actionsLabel.setText("Action sequence determined for context repair");


        jScrollPane3.setViewportView(actionsTable);

        javax.swing.GroupLayout actionsPanelLayout = new javax.swing.GroupLayout(actionsPanel);
        actionsPanel.setLayout(actionsPanelLayout);
        actionsPanelLayout.setHorizontalGroup(
                actionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(actionsPanelLayout.createSequentialGroup().addContainerGap().addGroup(actionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE).addComponent(actionsLabel)).addContainerGap()));
        actionsPanelLayout.setVerticalGroup(
                actionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(actionsPanelLayout.createSequentialGroup().addContainerGap().addComponent(actionsLabel).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 197, Short.MAX_VALUE).addContainerGap()));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addComponent(actionsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addContainerGap()).addGroup(layout.createSequentialGroup().addComponent(policiesPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addContainerGap()).addGroup(layout.createSequentialGroup().addComponent(currentStatePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addContainerGap()))));
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addGap(19, 19, 19).addComponent(currentStatePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(policiesPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(actionsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addContainerGap()));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param actionsList
     */
    public void setActionsList(ArrayList<String[]> actionsList) {
        this.actionsList.clear();
        if (actionsList != null) {
            this.actionsList.addAll(actionsList);
            jScrollPane3.setViewportView(actionsTable);
        }
        this.repaint();
    }

    public void setBrokenPoliciesList(ArrayList<String> policiesList) {
        this.policiesList.clear();
        this.policiesList.addAll(policiesList);
        jScrollPane2.setViewportView(policiesTable);
        this.repaint();
    }

    public void setBrokenStatesList(ArrayList<String[]> brokenStatesList) {
        this.brokenStatesList.clear();
        this.brokenStatesList.addAll(brokenStatesList);
        jScrollPane1.setViewportView(currentStateTable);
        this.repaint();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    //private javax.swing.JTextArea actionsArea;
    private javax.swing.JLabel actionsLabel;
    private javax.swing.JPanel actionsPanel;
    //private javax.swing.JTextArea curStateArea;
    private javax.swing.JLabel currentStateLabel;
    private javax.swing.JPanel currentStatePanel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    //private javax.swing.JTextArea policiesArea;
    private javax.swing.JLabel policiesLabel;
    private javax.swing.JPanel policiesPanel;
    // End of variables declaration//GEN-END:variables
}

