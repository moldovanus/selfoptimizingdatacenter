package greenContextOntology;

import edu.stanford.smi.protegex.owl.model.*;

import java.util.*;

/**
 * Generated by Protege-OWL  (http://protege.stanford.edu/plugins/owl).
 * Source OWL Class: http://www.owl-ontologies.com/Datacenter.owl#Task
 *
 * @version generated on Sat Mar 06 16:14:39 EET 2010
 */
public interface Task extends ContextElement {

    // Property http://www.owl-ontologies.com/Datacenter.owl#associatedInfo

    Collection getAssociatedInfo();

    RDFProperty getAssociatedInfoProperty();

    boolean hasAssociatedInfo();

    Iterator listAssociatedInfo();

    void addAssociatedInfo(TaskInfo newAssociatedInfo);

    void removeAssociatedInfo(TaskInfo oldAssociatedInfo);

    void setAssociatedInfo(Collection newAssociatedInfo);


    // Property http://www.owl-ontologies.com/Datacenter.owl#cores

    Collection getCores();

    RDFProperty getCoresProperty();

    boolean hasCores();

    Iterator listCores();

    void addCores(int newCores);

    void removeCores(int oldCores);

    void setCores(Collection newCores);


    // Property http://www.owl-ontologies.com/Datacenter.owl#cpu

    Collection getCpu();

    RDFProperty getCpuProperty();

    boolean hasCpu();

    Iterator listCpu();

    void addCpu(int newCpu);

    void removeCpu(int oldCpu);

    void setCpu(Collection newCpu);


    // Property http://www.owl-ontologies.com/Datacenter.owl#memory

    Collection getMemory();

    RDFProperty getMemoryProperty();

    boolean hasMemory();

    Iterator listMemory();

    void addMemory(int newMemory);

    void removeMemory(int oldMemory);

    void setMemory(Collection newMemory);


    // Property http://www.owl-ontologies.com/Datacenter.owl#name

    String getName();

    RDFProperty getNameProperty();

    boolean hasName();

    void setName(String newName);


    // Property http://www.owl-ontologies.com/Datacenter.owl#storage

    Collection getStorage();

    RDFProperty getStorageProperty();

    boolean hasStorage();

    Iterator listStorage();

    void addStorage(int newStorage);

    void removeStorage(int oldStorage);

    void setStorage(Collection newStorage);


    // Property http://www.owl-ontologies.com/Datacenter.owl#taskProperty

    Collection getTaskProperty();

    RDFProperty getTaskPropertyProperty();

    boolean hasTaskProperty();

    Iterator listTaskProperty();

    void addTaskProperty(Object newTaskProperty);

    void removeTaskProperty(Object oldTaskProperty);

    void setTaskProperty(Collection newTaskProperty);
}
