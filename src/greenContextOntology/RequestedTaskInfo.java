package greenContextOntology;

import com.hp.hpl.jena.ontology.OntModel;
import edu.stanford.smi.protegex.owl.model.RDFProperty;

/**
 * Generated by Protege-OWL  (http://protege.stanford.edu/plugins/owl).
 * Source OWL Class: http://www.owl-ontologies.com/Datacenter.owl#RequestedTaskInfo
 *
 * @version generated on Thu Apr 15 14:24:33 EEST 2010
 */
public interface RequestedTaskInfo extends ContextElement, CloneableOntologyElement {

    // Property http://www.owl-ontologies.com/Datacenter.owl#cores

    int getCores();

    RDFProperty getCoresProperty();

    boolean hasCores();

    void setCores(int newCores, OntModel model);

    void setCores(int newCores);


    // Property http://www.owl-ontologies.com/Datacenter.owl#cpuMaxAcceptableValue

    int getCpuMaxAcceptableValue();

    RDFProperty getCpuMaxAcceptableValueProperty();

    boolean hasCpuMaxAcceptableValue();

    void setCpuMaxAcceptableValue(int newCpuMaxAcceptableValue, OntModel model);

    void setCpuMaxAcceptableValue(int newCpuMaxAcceptableValue);


    // Property http://www.owl-ontologies.com/Datacenter.owl#cpuMinAcceptableValue

    int getCpuMinAcceptableValue();

    RDFProperty getCpuMinAcceptableValueProperty();

    boolean hasCpuMinAcceptableValue();

    void setCpuMinAcceptableValue(int newCpuMinAcceptableValue, OntModel model);

    void setCpuMinAcceptableValue(int newCpuMinAcceptableValue);


    // Property http://www.owl-ontologies.com/Datacenter.owl#memoryMaxAcceptableValue

    int getMemoryMaxAcceptableValue();

    RDFProperty getMemoryMaxAcceptableValueProperty();

    boolean hasMemoryMaxAcceptableValue();

    void setMemoryMaxAcceptableValue(int newMemoryMaxAcceptableValue, OntModel model);

    void setMemoryMaxAcceptableValue(int newMemoryMaxAcceptableValue);


    // Property http://www.owl-ontologies.com/Datacenter.owl#memoryMinAcceptableValue

    int getMemoryMinAcceptableValue();

    RDFProperty getMemoryMinAcceptableValueProperty();

    boolean hasMemoryMinAcceptableValue();

    void setMemoryMinAcceptableValue(int newMemoryMinAcceptableValue, OntModel model);

    void setMemoryMinAcceptableValue(int newMemoryMinAcceptableValue);


    // Property http://www.owl-ontologies.com/Datacenter.owl#storageMaxAcceptableValue

    int getStorageMaxAcceptableValue();

    RDFProperty getStorageMaxAcceptableValueProperty();

    boolean hasStorageMaxAcceptableValue();

    void setStorageMaxAcceptableValue(int newStorageMaxAcceptableValue);


    // Property http://www.owl-ontologies.com/Datacenter.owl#storageMinAcceptableValue

    int getStorageMinAcceptableValue();

    RDFProperty getStorageMinAcceptableValueProperty();

    boolean hasStorageMinAcceptableValue();

    void setStorageMinAcceptableValue(int newStorageMinAcceptableValue);

}
